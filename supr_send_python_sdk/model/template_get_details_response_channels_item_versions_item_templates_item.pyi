# coding: utf-8

"""
    SuprSend API

    SuprSend is a central communication stack for easily creating, managing and delivering notifications to your end users on multiple channels. Our single notification API has all the features set, which enables you to send notifications in a reliable and scalable manner and take care of end user experience, thereby eliminating the need to develop any notification service in-house for transactional/engagement notifications.

    The version of the OpenAPI document: 1.2.1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from supr_send_python_sdk import schemas  # noqa: F401


class TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            id = schemas.IntSchema
        
            @staticmethod
            def language() -> typing.Type['TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemLanguage']:
                return TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemLanguage
            is_enabled = schemas.BoolSchema
            approval_status = schemas.StrSchema
        
            @staticmethod
            def content() -> typing.Type['TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemContent']:
                return TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemContent
            created_at = schemas.StrSchema
            updated_at = schemas.StrSchema
        
            @staticmethod
            def updated_by() -> typing.Type['TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemUpdatedBy']:
                return TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemUpdatedBy
        
            @staticmethod
            def approval_cycle() -> typing.Type['TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemApprovalCycle']:
                return TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemApprovalCycle
            is_approval_needed = schemas.BoolSchema
            is_cloned_from_last_version = schemas.BoolSchema
            __annotations__ = {
                "id": id,
                "language": language,
                "is_enabled": is_enabled,
                "approval_status": approval_status,
                "content": content,
                "created_at": created_at,
                "updated_at": updated_at,
                "updated_by": updated_by,
                "approval_cycle": approval_cycle,
                "is_approval_needed": is_approval_needed,
                "is_cloned_from_last_version": is_cloned_from_last_version,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["language"]) -> 'TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemLanguage': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_enabled"]) -> MetaOapg.properties.is_enabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["approval_status"]) -> MetaOapg.properties.approval_status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["content"]) -> 'TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemContent': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created_at"]) -> MetaOapg.properties.created_at: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["updated_at"]) -> MetaOapg.properties.updated_at: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["updated_by"]) -> 'TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemUpdatedBy': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["approval_cycle"]) -> 'TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemApprovalCycle': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_approval_needed"]) -> MetaOapg.properties.is_approval_needed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_cloned_from_last_version"]) -> MetaOapg.properties.is_cloned_from_last_version: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "language", "is_enabled", "approval_status", "content", "created_at", "updated_at", "updated_by", "approval_cycle", "is_approval_needed", "is_cloned_from_last_version", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["language"]) -> typing.Union['TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemLanguage', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_enabled"]) -> typing.Union[MetaOapg.properties.is_enabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["approval_status"]) -> typing.Union[MetaOapg.properties.approval_status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["content"]) -> typing.Union['TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemContent', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created_at"]) -> typing.Union[MetaOapg.properties.created_at, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["updated_at"]) -> typing.Union[MetaOapg.properties.updated_at, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["updated_by"]) -> typing.Union['TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemUpdatedBy', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["approval_cycle"]) -> typing.Union['TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemApprovalCycle', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_approval_needed"]) -> typing.Union[MetaOapg.properties.is_approval_needed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_cloned_from_last_version"]) -> typing.Union[MetaOapg.properties.is_cloned_from_last_version, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "language", "is_enabled", "approval_status", "content", "created_at", "updated_at", "updated_by", "approval_cycle", "is_approval_needed", "is_cloned_from_last_version", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        language: typing.Union['TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemLanguage', schemas.Unset] = schemas.unset,
        is_enabled: typing.Union[MetaOapg.properties.is_enabled, bool, schemas.Unset] = schemas.unset,
        approval_status: typing.Union[MetaOapg.properties.approval_status, str, schemas.Unset] = schemas.unset,
        content: typing.Union['TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemContent', schemas.Unset] = schemas.unset,
        created_at: typing.Union[MetaOapg.properties.created_at, str, schemas.Unset] = schemas.unset,
        updated_at: typing.Union[MetaOapg.properties.updated_at, str, schemas.Unset] = schemas.unset,
        updated_by: typing.Union['TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemUpdatedBy', schemas.Unset] = schemas.unset,
        approval_cycle: typing.Union['TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemApprovalCycle', schemas.Unset] = schemas.unset,
        is_approval_needed: typing.Union[MetaOapg.properties.is_approval_needed, bool, schemas.Unset] = schemas.unset,
        is_cloned_from_last_version: typing.Union[MetaOapg.properties.is_cloned_from_last_version, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItem':
        return super().__new__(
            cls,
            *args,
            id=id,
            language=language,
            is_enabled=is_enabled,
            approval_status=approval_status,
            content=content,
            created_at=created_at,
            updated_at=updated_at,
            updated_by=updated_by,
            approval_cycle=approval_cycle,
            is_approval_needed=is_approval_needed,
            is_cloned_from_last_version=is_cloned_from_last_version,
            _configuration=_configuration,
            **kwargs,
        )

from supr_send_python_sdk.model.template_get_details_response_channels_item_versions_item_templates_item_approval_cycle import TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemApprovalCycle
from supr_send_python_sdk.model.template_get_details_response_channels_item_versions_item_templates_item_content import TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemContent
from supr_send_python_sdk.model.template_get_details_response_channels_item_versions_item_templates_item_language import TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemLanguage
from supr_send_python_sdk.model.template_get_details_response_channels_item_versions_item_templates_item_updated_by import TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemUpdatedBy
