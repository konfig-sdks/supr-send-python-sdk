# coding: utf-8

"""
    SuprSend API

    SuprSend is a central communication stack for easily creating, managing and delivering notifications to your end users on multiple channels. Our single notification API has all the features set, which enables you to send notifications in a reliable and scalable manner and take care of end user experience, thereby eliminating the need to develop any notification service in-house for transactional/engagement notifications.

    The version of the OpenAPI document: 1.2.1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from supr_send_python_sdk import schemas  # noqa: F401


class WorkflowConfigureTriggerRequestUsersItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "distinct_id",
        }
        
        class properties:
            distinct_id = schemas.StrSchema
        
            @staticmethod
            def channels() -> typing.Type['WorkflowConfigureTriggerRequestUsersItemchannels']:
                return WorkflowConfigureTriggerRequestUsersItemchannels
        
            @staticmethod
            def email() -> typing.Type['WorkflowConfigureTriggerRequestUsersItememail']:
                return WorkflowConfigureTriggerRequestUsersItememail
        
            @staticmethod
            def sms() -> typing.Type['WorkflowConfigureTriggerRequestUsersItemsms']:
                return WorkflowConfigureTriggerRequestUsersItemsms
        
            @staticmethod
            def whatsapp() -> typing.Type['WorkflowConfigureTriggerRequestUsersItemwhatsapp']:
                return WorkflowConfigureTriggerRequestUsersItemwhatsapp
        
            @staticmethod
            def androidpush() -> typing.Type['WorkflowConfigureTriggerRequestUsersItemandroidpush']:
                return WorkflowConfigureTriggerRequestUsersItemandroidpush
        
            @staticmethod
            def iospush() -> typing.Type['WorkflowConfigureTriggerRequestUsersItemiospush']:
                return WorkflowConfigureTriggerRequestUsersItemiospush
            slack = schemas.StrSchema
            __annotations__ = {
                "distinct_id": distinct_id,
                "$channels": channels,
                "$email": email,
                "$sms": sms,
                "$whatsapp": whatsapp,
                "$androidpush": androidpush,
                "$iospush": iospush,
                "$slack": slack,
            }
    
    distinct_id: MetaOapg.properties.distinct_id
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["distinct_id"]) -> MetaOapg.properties.distinct_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["$channels"]) -> 'WorkflowConfigureTriggerRequestUsersItemchannels': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["$email"]) -> 'WorkflowConfigureTriggerRequestUsersItememail': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["$sms"]) -> 'WorkflowConfigureTriggerRequestUsersItemsms': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["$whatsapp"]) -> 'WorkflowConfigureTriggerRequestUsersItemwhatsapp': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["$androidpush"]) -> 'WorkflowConfigureTriggerRequestUsersItemandroidpush': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["$iospush"]) -> 'WorkflowConfigureTriggerRequestUsersItemiospush': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["$slack"]) -> MetaOapg.properties.slack: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["distinct_id", "$channels", "$email", "$sms", "$whatsapp", "$androidpush", "$iospush", "$slack", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["distinct_id"]) -> MetaOapg.properties.distinct_id: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["$channels"]) -> typing.Union['WorkflowConfigureTriggerRequestUsersItemchannels', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["$email"]) -> typing.Union['WorkflowConfigureTriggerRequestUsersItememail', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["$sms"]) -> typing.Union['WorkflowConfigureTriggerRequestUsersItemsms', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["$whatsapp"]) -> typing.Union['WorkflowConfigureTriggerRequestUsersItemwhatsapp', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["$androidpush"]) -> typing.Union['WorkflowConfigureTriggerRequestUsersItemandroidpush', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["$iospush"]) -> typing.Union['WorkflowConfigureTriggerRequestUsersItemiospush', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["$slack"]) -> typing.Union[MetaOapg.properties.slack, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["distinct_id", "$channels", "$email", "$sms", "$whatsapp", "$androidpush", "$iospush", "$slack", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        distinct_id: typing.Union[MetaOapg.properties.distinct_id, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'WorkflowConfigureTriggerRequestUsersItem':
        return super().__new__(
            cls,
            *args,
            distinct_id=distinct_id,
            _configuration=_configuration,
            **kwargs,
        )

from supr_send_python_sdk.model.workflow_configure_trigger_request_users_itemandroidpush import WorkflowConfigureTriggerRequestUsersItemandroidpush
from supr_send_python_sdk.model.workflow_configure_trigger_request_users_itemchannels import WorkflowConfigureTriggerRequestUsersItemchannels
from supr_send_python_sdk.model.workflow_configure_trigger_request_users_itememail import WorkflowConfigureTriggerRequestUsersItememail
from supr_send_python_sdk.model.workflow_configure_trigger_request_users_itemiospush import WorkflowConfigureTriggerRequestUsersItemiospush
from supr_send_python_sdk.model.workflow_configure_trigger_request_users_itemsms import WorkflowConfigureTriggerRequestUsersItemsms
from supr_send_python_sdk.model.workflow_configure_trigger_request_users_itemwhatsapp import WorkflowConfigureTriggerRequestUsersItemwhatsapp
