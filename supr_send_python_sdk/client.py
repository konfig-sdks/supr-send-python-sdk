# coding: utf-8
"""
    SuprSend API

    SuprSend is a central communication stack for easily creating, managing and delivering notifications to your end users on multiple channels. Our single notification API has all the features set, which enables you to send notifications in a reliable and scalable manner and take care of end user experience, thereby eliminating the need to develop any notification service in-house for transactional/engagement notifications.

    The version of the OpenAPI document: 1.2.1
    Generated by: https://konfigthis.com
"""

import typing
import inspect
from datetime import date, datetime
from supr_send_python_sdk.client_custom import ClientCustom
from supr_send_python_sdk.configuration import Configuration
from supr_send_python_sdk.api_client import ApiClient
from supr_send_python_sdk.type_util import copy_signature
from supr_send_python_sdk.apis.tags.brand_api import BrandApi
from supr_send_python_sdk.apis.tags.broadcast_api import BroadcastApi
from supr_send_python_sdk.apis.tags.event_api import EventApi
from supr_send_python_sdk.apis.tags.pref_category_api import PrefCategoryApi
from supr_send_python_sdk.apis.tags.preference_api import PreferenceApi
from supr_send_python_sdk.apis.tags.subscriber_api import SubscriberApi
from supr_send_python_sdk.apis.tags.subscriber_list_api import SubscriberListApi
from supr_send_python_sdk.apis.tags.sync_api import SyncApi
from supr_send_python_sdk.apis.tags.template_api import TemplateApi
from supr_send_python_sdk.apis.tags.workflow_api import WorkflowApi



class SuprSend(ClientCustom):

    def __init__(self, configuration: typing.Union[Configuration, None] = None, **kwargs):
        super().__init__(configuration, **kwargs)
        if (len(kwargs) > 0):
            configuration = Configuration(**kwargs)
        if (configuration is None):
            raise Exception("configuration is required")
        api_client = ApiClient(configuration)
        self.brand: BrandApi = BrandApi(api_client)
        self.broadcast: BroadcastApi = BroadcastApi(api_client)
        self.event: EventApi = EventApi(api_client)
        self.pref_category: PrefCategoryApi = PrefCategoryApi(api_client)
        self.preference: PreferenceApi = PreferenceApi(api_client)
        self.subscriber: SubscriberApi = SubscriberApi(api_client)
        self.subscriber_list: SubscriberListApi = SubscriberListApi(api_client)
        self.sync: SyncApi = SyncApi(api_client)
        self.template: TemplateApi = TemplateApi(api_client)
        self.workflow: WorkflowApi = WorkflowApi(api_client)
