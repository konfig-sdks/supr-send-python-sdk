# coding: utf-8

"""
    SuprSend API

    SuprSend is a central communication stack for easily creating, managing and delivering notifications to your end users on multiple channels. Our single notification API has all the features set, which enables you to send notifications in a reliable and scalable manner and take care of end user experience, thereby eliminating the need to develop any notification service in-house for transactional/engagement notifications.

    The version of the OpenAPI document: 1.2.1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from supr_send_python_sdk.pydantic.template_get_details_response_channels_item_versions_item_templates_item_approval_cycle import TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemApprovalCycle
from supr_send_python_sdk.pydantic.template_get_details_response_channels_item_versions_item_templates_item_content import TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemContent
from supr_send_python_sdk.pydantic.template_get_details_response_channels_item_versions_item_templates_item_language import TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemLanguage
from supr_send_python_sdk.pydantic.template_get_details_response_channels_item_versions_item_templates_item_updated_by import TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemUpdatedBy

class TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItem(BaseModel):
    id: typing.Optional[int] = Field(None, alias='id')

    language: typing.Optional[TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemLanguage] = Field(None, alias='language')

    is_enabled: typing.Optional[bool] = Field(None, alias='is_enabled')

    approval_status: typing.Optional[str] = Field(None, alias='approval_status')

    content: typing.Optional[TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemContent] = Field(None, alias='content')

    created_at: typing.Optional[str] = Field(None, alias='created_at')

    updated_at: typing.Optional[str] = Field(None, alias='updated_at')

    updated_by: typing.Optional[TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemUpdatedBy] = Field(None, alias='updated_by')

    approval_cycle: typing.Optional[TemplateGetDetailsResponseChannelsItemVersionsItemTemplatesItemApprovalCycle] = Field(None, alias='approval_cycle')

    is_approval_needed: typing.Optional[bool] = Field(None, alias='is_approval_needed')

    is_cloned_from_last_version: typing.Optional[bool] = Field(None, alias='is_cloned_from_last_version')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
