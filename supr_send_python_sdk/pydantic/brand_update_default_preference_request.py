# coding: utf-8

"""
    SuprSend API

    SuprSend is a central communication stack for easily creating, managing and delivering notifications to your end users on multiple channels. Our single notification API has all the features set, which enables you to send notifications in a reliable and scalable manner and take care of end user experience, thereby eliminating the need to develop any notification service in-house for transactional/engagement notifications.

    The version of the OpenAPI document: 1.2.1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from supr_send_python_sdk.pydantic.brand_update_default_preference_request_mandatory_channels import BrandUpdateDefaultPreferenceRequestMandatoryChannels

class BrandUpdateDefaultPreferenceRequest(BaseModel):
    # set `**opt_in**` to send notifications on all channels by default <br>  set `**opt_out**` to not send notifications in this category by default. For instance, **newsletter** <br>  set `**cant_unsubscribe**`if you do not want users to completely opt-out from this category. Notifications will always be sent on mandatory channels in this category.
    preference: typing.Optional[str] = Field(None, alias='preference')

    # set it `false` to hide a category from user's preference page
    visible_to_subscriber: typing.Optional[bool] = Field(None, alias='visible_to_subscriber')

    mandatory_channels: typing.Optional[BrandUpdateDefaultPreferenceRequestMandatoryChannels] = Field(None, alias='mandatory_channels')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
